# version: 0.2
# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR....
#       - aws --version
#       - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 829903283215.dkr.ecr.ap-south-1.amazonaws.com
#       - REPOSITORY_URI=829903283215.dkr.ecr.ap-south-1.amazonaws.com/docker_ci-cd
#       - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#   build:
#     commands:
#       - echo Build started on `date`
#       - echo Installing dependencies...
#       - npm install
#       - echo Building the Docker image...
#       - docker build -t dockercicd:latest .
#       - docker tag dockercicd:latest dockercicd:$IMAGE_TAG
#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing to repository...
#       - docker push dockercicd:latest
#       - docker push dockercicd:$IMAGE_TAG
#       - echo Writing image definitions file...
#       - DOCKER_CONTAINER_NAME=nodejs-demo-ecr
#       - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME dockercicd:$IMAGE_TAG > imagedefinitions.json
#       - echo $DOCKER_CONTAINER_NAME
#       - echo Printing imagedefinitions.json
#       - cat imagedefinitions.json
# artifacts:
#   files:
#     - imagedefinitions.json
version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR....
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 829903283215.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=829903283215.dkr.ecr.ap-south-1.amazonaws.com/docker_ci-cd
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
      - echo Logging in to Docker Hub...
      - echo ${doc_password} | docker login -u ${doc_usname} --password-stdin

  build:
    commands:
      - echo Build started on `date`
      - echo Installing dependencies...
      - npm install
      - echo Building the Docker image...
      - docker build -t dockercicd:latest .
      - docker tag dockercicd:latest dockercicd:$IMAGE_TAG
      - docker tag dockercicd:latest dtharundev/dockercicd:latest

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing to Amazon ECR...
      - docker push dockercicd:latest
      - docker push dockercicd:$IMAGE_TAG
      - echo Pushing to Docker Hub...
      - docker push dtharundev/dockercicd:latest
      - echo Writing image definitions file...
      - DOCKER_CONTAINER_NAME=nodejs-demo-ecr
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME dockercicd:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo Printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json


# version: 0.2
# phases:
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR....
#       - aws --version
#       - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 829903283215.dkr.ecr.ap-south-1.amazonaws.com
#       - REPOSITORY_URI=829903283215.dkr.ecr.ap-south-1.amazonaws.com/docker_ci-cd
#       - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')
#       - echo Logging in to Docker Hub...
#       - echo ${doc_password} | docker login -u ${doc_usname} --password-stdin

#   build:
#     commands:
#       - echo Build started on `date`
#       - echo Installing dependencies...
#       - npm install
#       - echo Building the Docker image...
#       - docker build -t $REPOSITORY_URI:latest .
#       - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
#       - docker tag $REPOSITORY_URI:latest dtharundev/$REPOSITORY_URI:latest

#   post_build:
#     commands:
#       - echo Build completed on `date`
#       - echo Pushing to Amazon ECR...
#       - docker push $REPOSITORY_URI:latest
#       - docker push $REPOSITORY_URI:$IMAGE_TAG
#       - echo Pushing to Docker Hub...
#       - docker push dtharundev/$REPOSITORY_URI:latest
#       - echo Writing image definitions file...
#       - DOCKER_CONTAINER_NAME=nodejs-demo-ecr
#       - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
#       - echo $DOCKER_CONTAINER_NAME
#       - echo Printing imagedefinitions.json
#       - cat imagedefinitions.json

# artifacts:
#   files:
#     - imagedefinitions.json
